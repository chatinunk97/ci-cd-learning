name: Maven Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Verify JAR file exists
        run: ls -l target/

      # - name: Copy JAR to Docker build context
      #   run: |
      #     cp target/CICD_Demo-1.0-SNAPSHOT.jar .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: chatinun/learningdevops:latest
          context: .
  deploy:
    needs: build  # Ensures deploy waits for build to finish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SSH into EC2 and Run Commands
        run: |
          # Save the private key from the secret to a temporary file
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          
          # Use the saved private key to SSH into the instance
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            # Commands to execute on the EC2 instance
              # Log in to Docker Hub using the passed credentials
              echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin
              docker pull chatinun/learningdevops:latest
              docker stop java-container  || true
              docker container prune -f
              docker rm java-container || true
              docker run -it --name java-container  -p 80:80 chatinun/learningdevops:latest
          EOF
          
          # Clean up the temporary key file
          rm -f ec2_key.pem
